#BlueJ class context
comment0.params=args
comment0.target=void\ main(java.lang.String[])
comment1.params=e
comment1.target=Rechner(double)
comment10.params=s1\ s2
comment10.target=void\ sub(double,\ double)
comment11.params=Z1\ N1\ Z2\ N2
comment11.target=void\ bmult(int,\ int,\ int,\ int)
comment12.params=Z1\ N1\ Z2\ N2
comment12.target=void\ bdiv(int,\ int,\ int,\ int)
comment13.params=b\ e
comment13.target=double\ pot(double,\ double)
comment14.params=z\ out
comment14.target=int[]\ teilbr(int,\ boolean)
comment14.text=\ public\ static\ double\ durchnitt(ArrayList\ wsi)\r\n\ \ \ \ \ {double\ ws\=0;\r\n\ \ \ \ \ \ \ \ \ for(int\ i\=0;i<wsi.size();i++){\r\n\ \ \ \ \ \ \ \ \ \ ws+\=(double)(wsi.get(i));\r\n\ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ double\ d\=ws/wsi.size();\r\n\ \ \ \ \ \ return\ d;\r\n}
comment15.params=x
comment15.target=int\ zufallx(int)
comment16.params=b\ out
comment16.target=java.util.ArrayList\ primbis(int,\ boolean)
comment17.params=b\ vb\ out
comment17.target=java.util.ArrayList\ primbis(int,\ int,\ boolean)
comment18.params=z\ b
comment18.target=void\ vielfacheBis(int,\ int)
comment19.params=z
comment19.target=boolean\ kommaerk(double)
comment2.params=a2
comment2.target=void\ plus(int)
comment20.params=
comment20.target=double\ komRech()
comment21.params=z
comment21.target=int[]\ zat(int)
comment22.params=
comment22.target=java.lang.String\ jahr()
comment23.params=t
comment23.target=java.lang.String\ jahr(long)
comment24.params=in
comment24.target=void\ reiheUnendlich(int)
comment25.params=width\ height
comment25.target=Vector\ mittVQ(int,\ int)
comment26.params=modulant\ modulierer
comment26.target=int\ modulo(int,\ int)
comment27.params=x1\ y1\ x2\ y2
comment27.target=double\ abstand(int,\ int,\ int,\ int)
comment28.params=c1\ c2
comment28.target=boolean\ circle_intersects(Circle,\ Circle)
comment29.params=c1\ r1\ output
comment29.target=boolean\ circle_intersects_Rect(Circle,\ RQ,\ boolean)
comment3.params=
comment3.target=void\ remove()
comment30.params=c1\ r1
comment30.target=boolean\ circle_intersects_Rect(Circle,\ RQ)
comment31.params=z1\ z2
comment31.target=int\ ggT(int,\ int)
comment32.params=
comment32.target=void\ k_()
comment33.params=kapital\ zinssatz\ jahr
comment33.target=double\ zinseszinsatz(double,\ int,\ int)
comment34.params=
comment34.target=boolean\ bzufall()
comment35.params=a\ b
comment35.target=double\ log(double,\ double)
comment36.params=a\ b\ out
comment36.target=double\ log(double,\ double,\ boolean)
comment37.params=
comment37.target=double\ joost()
comment38.params=
comment38.target=double\ getHour()
comment39.params=
comment39.target=double\ getDay()
comment4.params=f2
comment4.target=void\ mult(int)
comment40.params=
comment40.target=double\ getMonth()
comment41.params=
comment41.target=double\ getDayInYear()
comment42.params=length
comment42.target=int[]\ wish(int)
comment43.params=list\ max\ is
comment43.target=int\ isnt(int[],\ int,\ int)
comment44.params=x1\ y1\ x2\ y2
comment44.target=double\ skalarproduct(double,\ double,\ double,\ double)
comment45.params=a
comment45.target=double\ sqrt(double)
comment46.params=whole\ get
comment46.target=int\ findNextDivisor(int,\ int)
comment47.params=c\ rectangle
comment47.target=boolean\ circle_intersects_rect(Circle,\ java.awt.Rectangle)
comment48.params=zuvor
comment48.target=int[]\ ordne(int[])
comment49.params=a
comment49.target=byte[]\ toByteArray(java.util.ArrayList)
comment5.params=d2
comment5.target=void\ div(double)
comment50.params=
comment50.target=java.awt.Color\ color()
comment51.params=in
comment51.target=int\ round(double)
comment52.params=red\ gre\ blu
comment52.target=int\ toRGB(int,\ int,\ int)
comment53.params=red\ gre\ blu\ trans
comment53.target=int\ toRGB(int,\ int,\ int,\ int)
comment54.params=image\ red\ gre\ blu
comment54.target=java.awt.image.BufferedImage\ removeRGB(java.awt.image.BufferedImage,\ int,\ int,\ int)
comment55.params=image\ RGB\ toRGB\ place
comment55.target=java.awt.image.BufferedImage\ changeRGB(java.awt.image.BufferedImage,\ int,\ int,\ java.awt.Rectangle)
comment56.params=be
comment56.target=boolean[]\ inbits(int)
comment57.params=z\ rad
comment57.target=int\ negate(int,\ int)
comment6.params=s2
comment6.target=void\ sub(double)
comment7.params=a1\ a2
comment7.target=void\ plus(double,\ double)
comment8.params=f1\ f2
comment8.target=void\ mult(double,\ double)
comment9.params=d1\ d2
comment9.target=void\ div(double,\ double)
numComments=58
